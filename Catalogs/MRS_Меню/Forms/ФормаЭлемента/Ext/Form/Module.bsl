
// Форма элемента справочника MRS_Меню
// Форма для редактирования позиций и групп меню с валидациями и синхронизацией

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установка значения по умолчанию для IDСтруктурыSimphony
	Если НЕ ЗначениеЗаполнено(Объект.IDСтруктурыSimphony) Тогда
		
		Объект.IDСтруктурыSimphony = 1;
		
	КонецЕсли;
	
	// Установка значения по умолчанию для Видимость
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ Объект.ЭтоГруппа Тогда
		
		Объект.Видимость = Истина;
		
	КонецЕсли;
	
	// Настройка видимости полей в зависимости от типа (группа/позиция)
	НастроитьВидимостьЭлементов();
	
	// Загрузка статуса синхронизации
	Если ЗначениеЗаполнено(Объект.Ссылка) И НЕ Объект.ЭтоГруппа Тогда
		
		ЗагрузитьСтатусСинхронизации();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Дополнительные действия при открытии формы
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// Валидация перед записью
	Если НЕ ВыполнитьВалидацию() Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// После записи обновляем статус
	Если НЕ ТекущийОбъект.ЭтоГруппа Тогда
		
		// Проверка существования записи в регистре статусов
		СтатусИнфо = MRS_ЛогированиеИнтеграцииСервер.ПолучитьСтатусСинхронизации(ТекущийОбъект.Ссылка);
		
		Если НЕ ЗначениеЗаполнено(СтатусИнфо.ДатаОбновления) Тогда
			
			// Если записи нет, создаем со статусом "Создано"
			MRS_ЛогированиеИнтеграцииСервер.ОбновитьСтатусСинхронизации(ТекущийОбъект.Ссылка, 
				Перечисления.MRS_СтатусыСинхронизации.Создано);
			
		КонецЕсли;
		
		// Перезагрузка статуса
		ЗагрузитьСтатусСинхронизации();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	// При изменении владельца очищаем родителя и семейную группу
	Объект.Родитель = ПредопределенноеЗначение("Справочник.MRS_Меню.ПустаяСсылка");
	Объект.СемейнаяГруппа = ПредопределенноеЗначение("Справочник.MRS_СемейнаяГруппа.ПустаяСсылка");
	
КонецПроцедуры

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	// При изменении родителя наследуем семейную группу
	Если ЗначениеЗаполнено(Объект.Родитель) Тогда
		
		НаследоватьСемейнуюГруппуОтРодителя();
		
	Иначе
		
		Объект.СемейнаяГруппа = ПредопределенноеЗначение("Справочник.MRS_СемейнаяГруппа.ПустаяСсылка");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	// При выборе номенклатуры автоматически заполняем наименование
	Если ЗначениеЗаполнено(Объект.Номенклатура) И ПустаяСтрока(Объект.Наименование) Тогда
		
		Объект.Наименование = Строка(Объект.Номенклатура);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Синхронизировать(Команда)
	
	// Проверка, что это позиция меню (не группа)
	Если Объект.ЭтоГруппа Тогда
		
		ПоказатьПредупреждение(, "Синхронизировать можно только позиции меню, а не группы");
		Возврат;
		
	КонецЕсли;
	
	// Проверка, что объект записан
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПоказатьПредупреждение(, "Перед синхронизацией необходимо записать позицию меню");
		Возврат;
		
	КонецЕсли;
	
	// Выполнение синхронизации
	СинхронизироватьПозициюНаСервере();
	
	// Обновление статуса
	ЗагрузитьСтатусСинхронизации();
	
	ПоказатьОповещениеПользователя("Синхронизация завершена", , 
		"Позиция меню синхронизирована с Simphony");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьВидимостьЭлементов()
	
	// Для группы скрываем реквизиты позиции
	Если Объект.ЭтоГруппа Тогда
		
		Элементы.ГруппаРеквизитыПозиции.Видимость = Ложь;
		Элементы.ГруппаСтатус.Видимость = Ложь;
		Элементы.ФормаСинхронизировать.Видимость = Ложь;
		
		// Для группы СемейнаяГруппа должна быть доступна для редактирования
		Элементы.СемейнаяГруппа.ТолькоПросмотр = Ложь;
		
	Иначе
		
		// Для позиции показываем все поля
		Элементы.ГруппаРеквизитыПозиции.Видимость = Истина;
		Элементы.ГруппаСтатус.Видимость = Истина;
		Элементы.ФормаСинхронизировать.Видимость = Истина;
		
		// Для позиции СемейнаяГруппа только для просмотра (наследуется от родителя)
		Элементы.СемейнаяГруппа.ТолькоПросмотр = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСтатусСинхронизации()
	
	// Получение статуса синхронизации из регистра
	СтатусИнфо = MRS_ЛогированиеИнтеграцииСервер.ПолучитьСтатусСинхронизации(Объект.Ссылка);
	
	Статус = СтатусИнфо.Статус;
	ДатаОбновления = СтатусИнфо.ДатаОбновления;
	ТекстОшибки = СтатусИнфо.ТекстОшибки;
	
КонецПроцедуры

&НаСервере
Процедура НаследоватьСемейнуюГруппуОтРодителя()
	
	// Получение семейной группы от родителя
	Если ЗначениеЗаполнено(Объект.Родитель) Тогда
		
		РодительОбъект = Объект.Родитель.ПолучитьОбъект();
		
		Если РодительОбъект <> Неопределено Тогда
			
			Объект.СемейнаяГруппа = РодительОбъект.СемейнаяГруппа;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ВыполнитьВалидацию()
	
	// Валидация для группы
	Если Объект.ЭтоГруппа Тогда
		
		// Для группы обязательна семейная группа
		Если НЕ ЗначениеЗаполнено(Объект.СемейнаяГруппа) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для группы меню обязательно заполнение семейной группы", 
				, "Объект.СемейнаяГруппа");
			Возврат Ложь;
			
		КонецЕсли;
		
		Возврат Истина;
		
	КонецЕсли;
	
	// Валидация для позиции меню
	
	// Проверка наличия родителя (позиция не может быть создана вне группы)
	Если НЕ ЗначениеЗаполнено(Объект.Родитель) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Позиция меню должна находиться в группе. Выберите родителя", 
			, "Объект.Родитель");
		Возврат Ложь;
		
	КонецЕсли;
	
	// Проверка обязательных полей
	Если НЕ ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена номенклатура", , "Объект.Номенклатура");
		Возврат Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.МажорнаяГруппа) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена мажорная группа", , "Объект.МажорнаяГруппа");
		Возврат Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.КлассМеню) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен класс меню", , "Объект.КлассМеню");
		Возврат Ложь;
		
	КонецЕсли;
	
	// Семейная группа должна быть унаследована от родителя
	Если НЕ ЗначениеЗаполнено(Объект.СемейнаяГруппа) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Семейная группа не унаследована от родителя", 
			, "Объект.СемейнаяГруппа");
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура СинхронизироватьПозициюНаСервере()
	
	// Установка статуса "В обработке"
	MRS_ЛогированиеИнтеграцииСервер.ОбновитьСтатусСинхронизации(Объект.Ссылка, 
		Перечисления.MRS_СтатусыСинхронизации.ВОбработке);
	
	// Выполнение синхронизации
	Попытка
		
		MRS_ИнтеграцияSimphonyСервер.СоздатьПозициюМеню(Объект.Ссылка);
		
	Исключение
		
		// Обработка ошибки
		ТекстОшибки = ОписаниеОшибки();
		
		MRS_ЛогированиеИнтеграцииСервер.ОбновитьСтатусСинхронизации(Объект.Ссылка, 
			Перечисления.MRS_СтатусыСинхронизации.Ошибка, ТекстОшибки);
		
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

